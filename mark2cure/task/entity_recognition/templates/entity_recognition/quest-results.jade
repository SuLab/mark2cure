extends base

- load widget_tweaks


block header
  with headerMessage=task.name
    include includes/header-task-entity-recognition


block content
  .container-fluid
    div(style="background: #f5f5f5;").row
      .col-xs-6.col-xs-offset-1
        p REVIEW ADMIN PAGE

    .row
      div(id="doc_{{document.pk}}", data-doc_pk="{{document.pk}}", data-pmid="{{document.document_id}}").container.document
        .paragraphs


block post-footer
  script.
    var task_id = "{{ task.pk }}";
    var self_data, passages, regions;

    function load_initial_data() {
      YPet = new Backbone.Marionette.Application({
        region: "#doc_{{document.pk}}"
      });

      initAnnotationTypes(YPet);

      paragraph_view = undefined;

      $.getJSON('/task/entity-recognition/quest/{{task.pk}}/{{document.pk}}/results/{{user.pk}}.json', function(data) {
        self_data = data;
        passages = data.collection.document.passage;
        regions = {};

        _.each(passages, function(passage, passage_idx) {
          var p_body = '<div id="' + passage.infon[2]['#text'] + '" class="paragraph-box m-t-1"><p class="paragraph"></p></div></div>';
          $('.paragraphs').append(p_body);
          regions['' + passage_idx] = '#' + passage.infon[2]['#text'];
        });

        // Add the views and regions to YPet
        var ParagraphView = Mn.View.extend({
          el: ".paragraphs",
          regions: regions
        })

        var paragraph_view = new ParagraphView();

        YPet.showView(paragraph_view);

        _.each(passages, function(passage, passage_idx) {
          var p = new Paragraph({'text': passage.text});
          paragraph_view.getRegion('' + passage_idx).show(new WordCollectionView({
            collection: p.get('words'),
            passage_json: passage,
            bioc_json: data
          }));
        });

      });
    };

    load_initial_data();

    YPet.start();

    /* Submit Feedback and show partner */
    $.ajax({
      url: '/task/entity-recognition/quest/{{task.pk}}/{{document.pk}}/results/{{opponent.pk}}.json',
      dataType: 'json',
      success: function(data) {

        partner_data = data;

        /* Show underlines */
        var passages = data.collection.document.passage;
        _.each(passages, function(passage, passage_idx) {
          YPet.getView().getRegion(passage_idx).currentView.drawBioC(passage, true);
        });

      },
      error: function(error_res) {
      }
    });

