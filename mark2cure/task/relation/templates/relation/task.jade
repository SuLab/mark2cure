extends base

- load widget_tweaks
- load humanize


block header
  - with headerMessage=task.name
    include includes/header-relation


block content

  .container-fluid
    #quest-guide.row
      .col-xs-12.col-md-10.col-md-offset-1
        ul#progress-bar.list-unstyled.list-inline

    .row
      .col-xs-12.col-md-10.col-md-offset-1
        #tree-insert

    .row
      .col-xs-10.col-xs-offset-1.col-sm-10.col-sm-offset-1.col-md-4.col-md-offset-4
        button(id='submit_button', disabled).btn.btn-primary.btn-block.disabled Submit

    .row
      .col-xs-12.col-md-10.col-md-offset-1
        div(id="doc_{{document.pk}}", data-doc_pk="{{document.pk}}", data-pmid="{{document.document_id}}", style="cursor: not-allowed;").document
          .paragraphs(style="cursor: not-allowed;")

    .row(style="display:none;")
      form(id="task_relation_results", action='{% url "task-relation:results" document_pk=document.pk %}', method='POST')
        - csrf_token

    .row.m-t-md
      .col-sm-5.col-md-3.col-md-offset-1.hidden-xs-down
        div(role="group").btn-group-vertical
          a(data-toggle="modal", data-target="#relationshipInstructionsModal", style='background-color:#fff; color:#7F3CFF; border-color:#7F3CFF; border-width:3px').btn.btn-default
            | Relation Instructions  <i class="fa fa-external-link fa-lg"></i>

          a(data-toggle="modal", data-target="#diseaseDefinitionsModal", style='background-color: #d1f3ff;').btn.btn-default
            | Disease Concept  <i class="fa fa-external-link fa-lg"></i>

          a(data-toggle="modal", data-target="#geneDefinitionsModal", style='background-color:rgb(177, 255, 168);').btn.btn-default
            | Genes Concept  <i class="fa fa-external-link fa-lg"></i>

          a(data-toggle="modal", data-target="#drugDefinitionsModal", style='background-color:rgb(255, 209, 220);').btn.btn-default
            | Drugs Concept  <i class="fa fa-external-link fa-lg"></i>

    #feedback_modal.modal.fade.tree-results
      .modal-dialog
        .modal-content
          .modal-header
            button(type="button", data-dismiss="modal", aria-label="Close").close
              span(aria-hidden="true") &times;
            h3.modal-title.text-center

          .modal-body
            #results-chart

          .modal-footer
            button(type="button", data-dismiss="modal").btn.btn-primary
              | Ok


block post-footer

  script(type="html/template", id="tree-template")
    div#tree.row.text-center

      div.concept.col-xs-10.col-xs-offset-1.col-sm-4.col-sm-offset-0.col-md-3#c1
        i#c1_not_correct.fa.fa-times-circle
        h3 <%= c1.text %>
        p.not_correct_stype

      div.col-xs-10.col-xs-offset-1.col-sm-4.col-sm-offset-0.col-md-6(style="padding-bottom:10px; padding-top:10px;")
        h3#relation.disabled Select a Relationship below...
        ul.list-group

      div.concept.col-xs-10.col-xs-offset-1.col-sm-4.col-sm-offset-0.col-md-3#c2
        i#c2_not_correct.fa.fa-times-circle
        h3 <%= c2.text %>
        p.not_correct_stype

  script.
    var relation_task_settings = {
      'csrf_token': "{{csrf_token}}",
      'document_pk': "{{ document.pk }}",
      'document_pmid': "{{ document.document_id }}"
    };
    $.getJSON('/static/js/tasks/relation-data.json', function(data) {
      relation_task_settings['data'] = data;
    });

    var passages, regions, tmp_passages;

    YPet.addInitializer(function(options) {

      Backbone.Radio.DEBUG = true;
      YPet['convoChannel'] = Backbone.Radio.channel('ypet');


      $.getJSON('/document/pubtator-new/'+relation_task_settings.document_pmid+'.json', function( data ) {
        passages = data.collection.document.passage;
        regions = {};

        _.each(passages, function(passage, passage_idx) {
          var p_body = '<div id="'+ passage.infon[2]['#text'] +'" class="paragraph-box m-t-md"><p class="paragraph"></p></div></div>';
          $('.paragraphs').append(p_body);
          regions[''+passage_idx] = '#'+passage.infon[2]['#text'];
        });
        YPet.addRegions(regions);

        _.each(passages, function(passage, passage_idx) {
          var p = new Paragraph({'text': passage.text});
          YPet[''+passage_idx].show( new WordCollectionView({
            collection: p.get('words'),
          }) );
          YPet[''+passage_idx].currentView.drawBioC(null, true);
        });
      });

      var show_alert = _.debounce(function(evt) {
        var $box = $(evt.target).closest('div[class^="paragraph-box"]');
        if( $box.hasClass('paragraph-box-error-alert') ) {
          $box.removeClass('paragraph-box-error-alert');
        } else {
          $box.addClass('paragraph-box-error-alert');
        }
      }, 500);

      YPet['convoChannel'].on('mouse-down', function(evt) {
        show_alert(evt);
      });

    });
    YPet.start();


  script(src="/static/js/libs/tree.js")
  script(src="/static/js/tasks/relation.js")
