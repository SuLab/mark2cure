extends base

- load widget_tweaks
- load group

block header
  - with headerMessage='Community Dashboard'
    include includes/header

block content

  .container
    - if messages
      - for message in messages
        - if 'safe' in message.tags
          .row
            .col-sm-10.col-sm-offset-1
              div(class='{{ message.tags }}').alert
                {{ message|safe }}


  #dashboard.container-fluid
    .row
      - if not mobile

        - if available_tasks|length > 1
          .col-xs-10.col-xs-offset-1.col-sm-6.col-sm-offset-0.col-md-5.col-md-offset-1.col-lg-4.col-lg-offset-1
            include common/includes/dashboard-entity-recognition

          .col-xs-10.col-xs-offset-1.col-sm-6.col-sm-offset-0.col-md-5.col-md-offset-0.col-lg-4.col-lg-offset-0
            include common/includes/dashboard-relation

          .hidden-md-down.col-lg-2.col-lg-offset-0
            include common/includes/dashboard-sidebar

        - else
          - if 'entity_recognition'|is_in:available_tasks
            .col-xs-10.col-xs-offset-1.col-md-7.col-md-offset-1.col-lg-6.col-lg-offset-1
              include common/includes/dashboard-entity-recognition

            .col-xs-10.col-xs-offset-1.col-md-1.col-md-offset-0.col-lg-2.col-lg-offset-0
              include common/includes/dashboard-unlock-relation

            .hidden-md-down.col-lg-2.col-lg-offset-0
              include common/includes/dashboard-sidebar

          - if 'relation'|is_in:available_tasks
            .col-xs-10.col-xs-offset-1.col-md-3.col-md-offset-1.col-lg-2.col-lg-offset-1
              include common/includes/dashboard-unlock-entity-recognition

            .col-xs-10.col-xs-offset-1.col-md-7.col-md-offset-0.col-lg-6.col-lg-offset-0
              include common/includes/dashboard-relation

            .hidden-md-down.col-lg-2.col-lg-offset-0
              include common/includes/dashboard-sidebar

      - else
        // Mobile dashboard
        - if available_tasks|length > 1

          .col-xs-10.col-xs-offset-1.col-sm-10.col-sm-offset-1
            include common/includes/dashboard-relation

          .hidden-md-down.col-lg-2.col-lg-offset-0
            include common/includes/dashboard-sidebar

        - else
          - if 'entity_recognition'|is_in:available_tasks
            .col-xs-10.col-xs-offset-1.col-sm-10.col-sm-offset-1
              include common/includes/dashboard-unlock-relation

            .hidden-md-down.col-lg-2.col-lg-offset-0
              include common/includes/dashboard-sidebar

          - if 'relation'|is_in:available_tasks
            .col-xs-10.col-xs-offset-1.col-sm-10.col-sm-offset-1
              include common/includes/dashboard-relation

            .hidden-md-down.col-lg-2.col-lg-offset-0
              include common/includes/dashboard-sidebar



block post-footer
  {{ block.super }}

  block post-footer-entity-recognition

    script.
      var draw_dashboard = function(group, quests) {
        $('#group-'+ group.pk).html('');
        var canvas = d3.select('#group-'+ group.pk);
        var available_quests = _.filter(quests, function(item) { return item.enabled && !item.completed });
        var completion_size = _.map(available_quests, function(item) { return item.completions; });

        var completion_scale = d3.scale.linear()
          .domain([_.min(completion_size), _.max(completion_size)])
          .range(['#00CCFF', '#E64C66']);

        var template = _.template($('#relation-item-template').html());

        var attrs = {
          'class': 'quest col-xs-4 col-sm-3 col-md-3 col-lg-2',
        };
        var styles = {
        };
        var quest = canvas.selectAll('.quest').remove();
        var quest = canvas.selectAll('.quest').data(quests);
        quest.enter().append('div')
          .attr(attrs)
          .style(styles)
          .html(function(d, i) {
            return template({
              'd': d,
              'progress': (d.progress.current/d.progress.required)*100,
              'completions_scale': completion_scale(d.completions),
            });
          });
        quest.transition().attr(attrs);
        quest.exit().remove();
      };

      $.ajax({
        'type': 'GET',
        'url': '/api/groups/',
        'success': function(data) {
          _.each(data, function(v) {
            if(v.enabled) {
              var template = _.template("<div class='row m-t-1'><div class='col-xs-12'><h3><a href='/group/<%- stub %>/'><%- name %></a></h3><a href='/group/<%- stub %>'><p class='text-muted'><%- _.str.prune(description, 100) %></p></a></div><div id='group-<%- pk %>' class='col-xs-12 paragraph-box'><p class='quest-loading text-xs-center'>Loading...</p></div></div>");
              $('#group-selection').append(template(v));

              $.ajax({
                'type': 'GET',
                'url': '/api/quest/'+ v.pk +'/',
                'success': function(data) {
                  draw_dashboard(v, data);

                  $('#group-selection .quest').click(function(evt) {
                    var link = $(this).find('a');
                    if(link.length) { location.href=link.attr('href'); }
                  });

                }
              });

            };

          });
        }
      });


  block post-footer-relation


    script.
      if($('#document-relation-board').length) {

        var DocumentRelationBoard = Backbone.Marionette.Application.extend({
          region: '#document-relation-board',

          onStart: function() {
            var docs = new DocumentList();


            var main = this.getRegion();
            main.show( new DocumentCompositeView({'collection': docs}) );
          }
        });
        var doc_rel_board_app = new DocumentRelationBoard();
        doc_rel_board_app.start();

      }


  block post-footer-sidebar
    script.


      var LeaderBoard = Backbone.Marionette.Application.extend({
        region: '#leaderboard',

        onStart: function() {
          var settings = new LeaderBoardSettings();
          var users = new UserList();

          var main= this.getRegion();
          main.show( new UserCompositeView({'model': settings, 'collection': users}) );
        }
      });
      var app = new LeaderBoard();
      app.start();

