extends base

- load widget_tweaks
- load brabeion_tags
- load humanize
- load group

block header
  - with headerMessage='Community Dashboard'
    include includes/header

block content

  .container
    - if messages
      - for message in messages
        - if 'safe' in message.tags
          .row
            .col-sm-10.col-sm-offset-1
              div(class='{{ message.tags }}').alert
                {{ message|safe }}


  #dashboard.container-fluid
    .row
      .col-sm-8.col-sm-offset-0.col-lg-7.col-lg-offset-1
        block dashboard-content
          #group-selection


      .col-sm-4.col-sm-offset-0.col-lg-3.col-lg-offset-0
        .row
          .col-xs-12.col-xs-offset-0
            .card
              .card-header
                | My Stats
              .card-block
                ol.list-unstyled
                  li Total Quests: #{user.userprofile.quests_count|intcomma}
                  li Total Annotations: #{user.userprofile.annotations_count|intcomma}
                  li Score: #{user.userprofile.score|intcomma}

              - if request.user|has_group:"Uxtesters"
                .card-block
                  a(href='{% url "task-relation:home" %}')
                    | Interested in trying the new relation identification module?

            .card-footer.text-center
              a(href='{% url "userprofile:public-profile" username=user.username %}').text-muted View Profile

        .row
          .col-xs-12.col-xs-offset-0.col-lg-10.col-lg-offset-1
            #leaderboard

  include common/includes/welcome-modal

block post-footer
    #fb-root
    - if welcome
      script.
        $('#dashboardWelcomeModal').modal('show');

    script.
      var draw_dashboard = function(group, quests) {
        $('#group-'+ group.pk).html('');
        var canvas = d3.select('#group-'+ group.pk);
        var available_quests = _.filter(quests, function(item) { return item.enabled && !item.completed });
        var completion_size = _.map(available_quests, function(item) { return item.completions; });

        var completion_scale = d3.scale.linear()
          .domain([_.min(completion_size), _.max(completion_size)])
          .range(['#00CCFF', '#E64C66']);

        var template = _.template("<div class='row'><div class='col-xs-12 text-center'><% if(d.progress.completed) { %><span class='fa fa-certificate muted' title='The community has completed this Quest.'></span><% } else if (d.user.completed) { %><span class='fa fa-check' title='You have completed this Quest.'></span><% } else if (!d.user.enabled) { %><span class='fa fa-circle muted' title='This quest is not enabled.'></span><% } else { %><a href='/task/entity-recognition/quest/<%- d.id %>/' title='Click to start this quest!'><p style='font-size: 1.75em; line-height: 1.8em;'><%- d.name %></p></a><% } %></div></div><% if(d.user.enabled) { %><div class='row'><div class='col-xs-12' title='This quest is <%- Math.round(progress) %>% complete.'><progress value='<%- progress %>' max='100' class='progress'><div class='progress'><span style='width: <%- progress %>%;' class='progress-bar'><%- d.progress.current %> Completions</span></div></progress></div></div><% } %>");

        var attrs = {
          'class': 'quest col-xs-4 col-sm-3 col-md-3 col-lg-2',
        };
        var styles = {
        };
        var quest = canvas.selectAll('.quest').remove();
        var quest = canvas.selectAll('.quest').data(quests);
        quest.enter().append('div')
          .attr(attrs)
          .style(styles)
          .html(function(d, i) {
            return template({
              'd': d,
              'progress': (d.progress.current/d.progress.required)*100,
              'completions_scale': completion_scale(d.completions),
            });
          });
        quest.transition().attr(attrs);
        quest.exit().remove();
      };

      $.ajax({
        'type': 'GET',
        'url': '/api/groups/',
        'success': function(data) {
          _.each(data, function(v) {
            if(v.enabled) {
              var template = _.template("<div class='row m-t-md'><div class='col-xs-12'><h3><a href='/group/<%- stub %>/'><%- name %></a></h3><a href='/group/<%- stub %>'><p class='text-muted'><%- _.str.prune(description, 100) %></p></a></div><div id='group-<%- pk %>' class='col-xs-12 paragraph-box'><h2 class='quest-loading text-cente'>Loading...</h2></div></div>");
              $('#group-selection').append(template(v));

              $.ajax({
                'type': 'GET',
                'url': '/api/quest/'+ v.pk +'/',
                'success': function(data) {
                  draw_dashboard(v, data);

                  $('#group-selection .quest').click(function(evt) {
                    var link = $(this).find('a');
                    if(link.length) { location.href=link.attr('href'); }
                  });

                }
              });

            };

          });
        }
      });

    script.
      LeaderBoard.addInitializer(function(options) {
        LeaderBoard.addRegions({'leaderboard': '#leaderboard'});
        var settings = new LeaderBoardSettings();
        var users = new UserList();
        LeaderBoard['leaderboard'].show( new UserCompositeView({'model': settings, 'collection': users}) );
      });
      LeaderBoard.start();
