extends control/base

- load widget_tweaks
- load humanize

block content

  .container-fluid.m-t-2.talk
    .row
      .col-xs-4.col-xs-offset-1
        .row
          .col-xs-12
            h2 Pubtator Details (<a href='{% url "document:read-pubtator-bioc" pubmed_id=doc.document_id format_type="xml" %}'>BioC</a>)
          .col-xs-6.col-xs-offset-3.hide
            form(action='{% url "control:document_reset_pubtator" pk=doc.pk %}', method='post')
              - csrf_token
              button.btn.btn-warning.btn-block
                | Reset All

        hr

        .list-group
          - for pubtator in doc.pubtators.all
            .list-group-item
              .row
                .col-xs-3
                  - if pubtator.valid
                    i.fa.fa-5x.fa-check.text-success
                  - else
                    i.fa.fa-5x.fa-exclamation-triangle.text-danger

                .col-xs-6
                  h4.list-group-item-heading
                    a(href='{% url "admin:document_pubtator_change" pubtator.pk %}')
                      #{pubtator.kind}
                  p.list-group-item-text Updated: #{pubtator.updated|naturaltime}
                  - if pubtator.session_id
                    p.list-group-item-text Session: #{pubtator.session_id}
                  - else
                    p.list-group-item-text Annotations: #{pubtator.count_annotations}
                  p.list-group-item-text
                    a(href='{% url "document:read-pubtator" pk=pubtator.pk %}') BioC

                .col-xs-3
                  form(action='{% url "control:pubtator" pk=pubtator.pk %}', method='post')
                    - csrf_token
                    button(type='submit').btn.btn-danger.btn-block
                      | Reset

              hr

      .col-xs-5.col-xs-offset-1

        .row
          .col-xs-12.foot-space
            h2.pull-left #{doc}
            a(href='http://www.ncbi.nlm.nih.gov/pubmed/{{doc.document_id}}', target='_blank', style='margin-top: 10px; margin-left: 10px;').btn.btn-info
              | PUBMED  <i class="fa fa-external-link fa-lg"></i>

        .row
          .col-xs-12
            p.text-muted Mouseover to see other users' annotations:
            ul.pagination
              - for user_pk in doc.contributors
                li
                  a(data-userpk='{{user_pk}}') #{user_pk}

            .paragraphs.micro

block post-footer
  script.
    var self_data, passages, regions;

    YPet.addInitializer(function(options) {

      $.getJSON('/document/{{doc.pk}}/user/{{user.pk}}/results.json', function( data ) {
        self_data = data;
        passages = data.collection.document.passage;
        regions = {};

        _.each(passages, function(passage, passage_idx) {
          var p_body = '<div id="'+ passage.infon[2]['#text'] +'" class="paragraph-box m-t-1"><p class="paragraph"></p></div></div>';
          $('.paragraphs').append(p_body);
          regions[''+passage_idx] = '#'+passage.infon[2]['#text'];
        });
        YPet.addRegions(regions);

        _.each(passages, function(passage, passage_idx) {
          var p = new Paragraph({'text': passage.text});
          YPet[''+passage_idx].show( new WordCollectionView({
            collection: p.get('words'),
            passage_json: passage,
            bioc_json: data
          }) );
          YPet[''+passage_idx].currentView.drawBioC(passage, false);
          YPet[''+passage_idx].currentView.drawBioC(null, true);
        });

      });
    });
    YPet.start();


    $('ul.pagination li a').on('mouseover', function(evt) {
      var user_pk = $(this).data('userpk');

      $.getJSON('/document/{{doc.pk}}/user/'+ user_pk +'/results.json', function( data ) {
        self_data = data;
        passages = data.collection.document.passage;

        _.each(passages, function(passage, passage_idx) {
          var p = new Paragraph({'text': passage.text});
          YPet[''+passage_idx].show( new WordCollectionView({
            collection: p.get('words'),
            passage_json: passage,
            bioc_json: data
          }) );
          YPet[''+passage_idx].currentView.drawBioC(passage, false);
          YPet[''+passage_idx].currentView.drawBioC(null, true);
        });
      });

    });

